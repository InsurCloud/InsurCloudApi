'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.832
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization
Imports System.Data
Imports System.Collections.Generic
Imports CorPolicy

'
'This source code was auto-generated by wsdl, Version=2.0.50727.42.
'
Namespace ImperialFire

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code"), _
     System.Web.Services.WebServiceBindingAttribute(Name:="LoggingSoap", [Namespace]:="com.insurcloud"), _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(clsBaseCoverage)), _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(clsBaseUnit)), _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(clsBaseEntity)), _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(clsBasePolicy)), _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(clsLogging))> _
    Partial Public Class Logging
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol

        Private WriteHomeownersLogOperationCompleted As System.Threading.SendOrPostCallback

        Private WriteFloodLogOperationCompleted As System.Threading.SendOrPostCallback

        Private WriteAutoLogOperationCompleted As System.Threading.SendOrPostCallback

        '''<remarks/>
        Public Sub New()
            MyBase.New()
            Me.Url = ConfigurationManager.AppSettings("LoggingServiceURL") '"http://localhost:4608/LoggingService/Logging.asmx"
        End Sub

        '''<remarks/>
        Public Event WriteHomeownersLogCompleted As WriteHomeownersLogCompletedEventHandler

        '''<remarks/>
        Public Event WriteFloodLogCompleted As WriteFloodLogCompletedEventHandler

        '''<remarks/>
        Public Event WriteAutoLogCompleted As WriteAutoLogCompletedEventHandler

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("com.insurcloud/WriteHomeownersLog", RequestNamespace:="com.insurcloud", ResponseNamespace:="com.insurcloud", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Sub WriteHomeownersLog(ByVal oLog As clsLogging1, ByVal sMethodName As String, ByVal sErrorMsg As String)
            Me.Invoke("WriteHomeownersLog", New Object() {oLog, sMethodName, sErrorMsg})
        End Sub

        '''<remarks/>
        Public Function BeginWriteHomeownersLog(ByVal oLog As clsLogging1, ByVal sMethodName As String, ByVal sErrorMsg As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("WriteHomeownersLog", New Object() {oLog, sMethodName, sErrorMsg}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Sub EndWriteHomeownersLog(ByVal asyncResult As System.IAsyncResult)
            Me.EndInvoke(asyncResult)
        End Sub

        '''<remarks/>
        Public Overloads Sub WriteHomeownersLogAsync(ByVal oLog As clsLogging1, ByVal sMethodName As String, ByVal sErrorMsg As String)
            Me.WriteHomeownersLogAsync(oLog, sMethodName, sErrorMsg, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub WriteHomeownersLogAsync(ByVal oLog As clsLogging1, ByVal sMethodName As String, ByVal sErrorMsg As String, ByVal userState As Object)
            If (Me.WriteHomeownersLogOperationCompleted Is Nothing) Then
                Me.WriteHomeownersLogOperationCompleted = AddressOf Me.OnWriteHomeownersLogOperationCompleted
            End If
            Me.InvokeAsync("WriteHomeownersLog", New Object() {oLog, sMethodName, sErrorMsg}, Me.WriteHomeownersLogOperationCompleted, userState)
        End Sub

        Private Sub OnWriteHomeownersLogOperationCompleted(ByVal arg As Object)
            If (Not (Me.WriteHomeownersLogCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WriteHomeownersLogCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("com.insurcloud/WriteFloodLog", RequestNamespace:="com.insurcloud", ResponseNamespace:="com.insurcloud", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Sub WriteFloodLog(ByVal oLog As clsLogging4, ByVal sMethodName As String, ByVal sErrorMsg As String)
            Me.Invoke("WriteFloodLog", New Object() {oLog, sMethodName, sErrorMsg})
        End Sub

        '''<remarks/>
        Public Function BeginWriteFloodLog(ByVal oLog As clsLogging4, ByVal sMethodName As String, ByVal sErrorMsg As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("WriteFloodLog", New Object() {oLog, sMethodName, sErrorMsg}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Sub EndWriteFloodLog(ByVal asyncResult As System.IAsyncResult)
            Me.EndInvoke(asyncResult)
        End Sub

        '''<remarks/>
        Public Overloads Sub WriteFloodLogAsync(ByVal oLog As clsLogging4, ByVal sMethodName As String, ByVal sErrorMsg As String)
            Me.WriteFloodLogAsync(oLog, sMethodName, sErrorMsg, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub WriteFloodLogAsync(ByVal oLog As clsLogging4, ByVal sMethodName As String, ByVal sErrorMsg As String, ByVal userState As Object)
            If (Me.WriteFloodLogOperationCompleted Is Nothing) Then
                Me.WriteFloodLogOperationCompleted = AddressOf Me.OnWriteFloodLogOperationCompleted
            End If
            Me.InvokeAsync("WriteFloodLog", New Object() {oLog, sMethodName, sErrorMsg}, Me.WriteFloodLogOperationCompleted, userState)
        End Sub

        Private Sub OnWriteFloodLogOperationCompleted(ByVal arg As Object)
            If (Not (Me.WriteFloodLogCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WriteFloodLogCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("com.insurcloud/WriteAutoLog", RequestNamespace:="com.insurcloud", ResponseNamespace:="com.insurcloud", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Sub WriteAutoLog(ByVal oLog As clsLogging2, ByVal sMethodName As String, ByVal sErrorMsg As String)
            Me.Invoke("WriteAutoLog", New Object() {oLog, sMethodName, sErrorMsg})
        End Sub

        '''<remarks/>
        Public Function BeginWriteAutoLog(ByVal oLog As clsLogging2, ByVal sMethodName As String, ByVal sErrorMsg As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("WriteAutoLog", New Object() {oLog, sMethodName, sErrorMsg}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Sub EndWriteAutoLog(ByVal asyncResult As System.IAsyncResult)
            Me.EndInvoke(asyncResult)
        End Sub

        '''<remarks/>
        Public Overloads Sub WriteAutoLogAsync(ByVal oLog As clsLogging2, ByVal sMethodName As String, ByVal sErrorMsg As String)
            Me.WriteAutoLogAsync(oLog, sMethodName, sErrorMsg, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub WriteAutoLogAsync(ByVal oLog As clsLogging2, ByVal sMethodName As String, ByVal sErrorMsg As String, ByVal userState As Object)
            If (Me.WriteAutoLogOperationCompleted Is Nothing) Then
                Me.WriteAutoLogOperationCompleted = AddressOf Me.OnWriteAutoLogOperationCompleted
            End If
            Me.InvokeAsync("WriteAutoLog", New Object() {oLog, sMethodName, sErrorMsg}, Me.WriteAutoLogOperationCompleted, userState)
        End Sub

        Private Sub OnWriteAutoLogOperationCompleted(ByVal arg As Object)
            If (Not (Me.WriteAutoLogCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WriteAutoLogCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"), _
     System.SerializableAttribute(), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code"), _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="com.insurcloud")> _
    Partial Public Class clsLogging1
        Inherits clsLogging

        Private policyField As clsPolicyHomeOwner

        '''<remarks/>
        Public Property Policy() As clsPolicyHomeOwner
            Get
                Return Me.policyField
            End Get
            Set(ByVal value As clsPolicyHomeOwner)
                Me.policyField = value
            End Set
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"), _
     System.SerializableAttribute(), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code"), _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="com.insurcloud")> _
    Partial Public Class clsLogItem

        Private titleField As String

        Private descriptionField As String

        Private stepNumField As Integer

        '''<remarks/>
        Public Property Title() As String
            Get
                Return Me.titleField
            End Get
            Set(ByVal value As String)
                Me.titleField = value
            End Set
        End Property

        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set(ByVal value As String)
                Me.descriptionField = value
            End Set
        End Property

        '''<remarks/>
        Public Property StepNum() As Integer
            Get
                Return Me.stepNumField
            End Get
            Set(ByVal value As Integer)
                Me.stepNumField = value
            End Set
        End Property
    End Class

    '''<remarks/>
    <System.Xml.Serialization.XmlIncludeAttribute(GetType(clsLogging2)), _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(clsLogging4)), _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(clsLogging1)), _
     System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"), _
     System.SerializableAttribute(), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code"), _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="com.insurcloud")> _
    Partial Public MustInherit Class clsLogging

        Private startTimeStampField As Date

        Private endTimeStampField As Date

        Private dataTableField As New List(Of DataTable)

        Private driverTableField As New List(Of DataTable)

        Private logItemsField As New List(Of clsLogItem)

        Private WriteLogXMLField As Boolean = True

        '''<remarks/>
        Public Property StartTimeStamp() As Date
            Get
                Return Me.startTimeStampField
            End Get
            Set(ByVal value As Date)
                Me.startTimeStampField = value
            End Set
        End Property

        '''<remarks/>
        Public Property EndTimeStamp() As Date
            Get
                Return Me.endTimeStampField
            End Get
            Set(ByVal value As Date)
                Me.endTimeStampField = value
            End Set
        End Property

        '''<remarks/>
        Public Property DataTable() As List(Of DataTable)
            Get
                Return Me.dataTableField
            End Get
            Set(ByVal value As List(Of DataTable))
                Me.dataTableField = value
            End Set
        End Property

        '''<remarks/>
        Public Property DriverDataTable() As List(Of DataTable)
            Get
                Return Me.driverTableField
            End Get
            Set(ByVal value As List(Of DataTable))
                Me.driverTableField = value
            End Set
        End Property

        '''<remarks/>
        Public Property LogItems() As List(Of clsLogItem)
            Get
                Return Me.logItemsField
            End Get
            Set(ByVal value As List(Of clsLogItem))
                Me.logItemsField = value
            End Set
        End Property

        Public Property WriteLogXML() As Boolean
            Get
                Return WriteLogXMLField
            End Get
            Set(ByVal value As Boolean)
                WriteLogXMLField = value
            End Set
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"), _
     System.SerializableAttribute(), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code"), _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="com.insurcloud")> _
    Partial Public Class clsLogging2
        Inherits clsLogging

        Private policyField As clsPolicyPPA

        '''<remarks/>
        Public Property Policy() As clsPolicyPPA
            Get
                Return Me.policyField
            End Get
            Set(ByVal value As clsPolicyPPA)
                Me.policyField = value
            End Set
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"), _
     System.SerializableAttribute(), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code"), _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="com.insurcloud")> _
    Partial Public Class clsLogging4
        Inherits clsLogging

        Private policyField As clsPolicyFlood

        '''<remarks/>
        Public Property Policy() As clsPolicyFlood
            Get
                Return Me.policyField
            End Get
            Set(ByVal value As clsPolicyFlood)
                Me.policyField = value
            End Set
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")> _
    Public Delegate Sub WriteHomeownersLogCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")> _
    Public Delegate Sub WriteFloodLogCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")> _
    Public Delegate Sub WriteAutoLogCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
End Namespace
