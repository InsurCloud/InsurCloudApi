'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.3615
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization
Imports CorPolicy

'
'This source code was auto-generated by wsdl, Version=2.0.50727.42.
'
Namespace ImperialFire
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="VINServiceSoap", [Namespace]:="http://www.imperialfire.com/"),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(clsBaseSurvey)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(clsBaseCoverage)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(clsBaseEntity)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(clsBaseUnit))>  _
    Partial Public Class VINService
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private ResetTableOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetVINYearsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetVINMakesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetVINModelsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetVehicleBodyStylesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetVIN10OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetPossibleVINRowsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private VerifyCheckDigitOperationCompleted As System.Threading.SendOrPostCallback
        
        Private BridgeVINDataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private BridgeVehVINOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LookUpByVINOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetVehicleByVINOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LookUpPASVINOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ResetVINTableOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CheckIfIncompleteVehicleOperationCompleted As System.Threading.SendOrPostCallback
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = ConfigurationManager.AppSettings("VINServiceURL")
        End Sub
        
        '''<remarks/>
        Public Event ResetTableCompleted As ResetTableCompletedEventHandler
        
        '''<remarks/>
        Public Event GetVINYearsCompleted As GetVINYearsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetVINMakesCompleted As GetVINMakesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetVINModelsCompleted As GetVINModelsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetVehicleBodyStylesCompleted As GetVehicleBodyStylesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetVIN10Completed As GetVIN10CompletedEventHandler
        
        '''<remarks/>
        Public Event GetPossibleVINRowsCompleted As GetPossibleVINRowsCompletedEventHandler
        
        '''<remarks/>
        Public Event VerifyCheckDigitCompleted As VerifyCheckDigitCompletedEventHandler
        
        '''<remarks/>
        Public Event BridgeVINDataCompleted As BridgeVINDataCompletedEventHandler
        
        '''<remarks/>
        Public Event BridgeVehVINCompleted As BridgeVehVINCompletedEventHandler
        
        '''<remarks/>
        Public Event LookUpByVINCompleted As LookUpByVINCompletedEventHandler
        
        '''<remarks/>
        Public Event GetVehicleByVINCompleted As GetVehicleByVINCompletedEventHandler
        
        '''<remarks/>
        Public Event LookUpPASVINCompleted As LookUpPASVINCompletedEventHandler
        
        '''<remarks/>
        Public Event ResetVINTableCompleted As ResetVINTableCompletedEventHandler
        
        '''<remarks/>
        Public Event CheckIfIncompleteVehicleCompleted As CheckIfIncompleteVehicleCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imperialfire.com/ResetTable", RequestNamespace:="http://www.imperialfire.com/", ResponseNamespace:="http://www.imperialfire.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub ResetTable()
            Me.Invoke("ResetTable", New Object(-1) {})
        End Sub
        
        '''<remarks/>
        Public Function BeginResetTable(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ResetTable", New Object(-1) {}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Sub EndResetTable(ByVal asyncResult As System.IAsyncResult)
            Me.EndInvoke(asyncResult)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ResetTableAsync()
            Me.ResetTableAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ResetTableAsync(ByVal userState As Object)
            If (Me.ResetTableOperationCompleted Is Nothing) Then
                Me.ResetTableOperationCompleted = AddressOf Me.OnResetTableOperationCompleted
            End If
            Me.InvokeAsync("ResetTable", New Object(-1) {}, Me.ResetTableOperationCompleted, userState)
        End Sub
        
        Private Sub OnResetTableOperationCompleted(ByVal arg As Object)
            If (Not (Me.ResetTableCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ResetTableCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imperialfire.com/GetVINYears", RequestNamespace:="http://www.imperialfire.com/", ResponseNamespace:="http://www.imperialfire.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetVINYears() As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetVINYears", New Object(-1) {})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetVINYears(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetVINYears", New Object(-1) {}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetVINYears(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetVINYearsAsync()
            Me.GetVINYearsAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetVINYearsAsync(ByVal userState As Object)
            If (Me.GetVINYearsOperationCompleted Is Nothing) Then
                Me.GetVINYearsOperationCompleted = AddressOf Me.OnGetVINYearsOperationCompleted
            End If
            Me.InvokeAsync("GetVINYears", New Object(-1) {}, Me.GetVINYearsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetVINYearsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetVINYearsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetVINYearsCompleted(Me, New GetVINYearsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imperialfire.com/GetVINMakes", RequestNamespace:="http://www.imperialfire.com/", ResponseNamespace:="http://www.imperialfire.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetVINMakes(ByVal Year As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetVINMakes", New Object() {Year})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetVINMakes(ByVal Year As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetVINMakes", New Object() {Year}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetVINMakes(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetVINMakesAsync(ByVal Year As String)
            Me.GetVINMakesAsync(Year, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetVINMakesAsync(ByVal Year As String, ByVal userState As Object)
            If (Me.GetVINMakesOperationCompleted Is Nothing) Then
                Me.GetVINMakesOperationCompleted = AddressOf Me.OnGetVINMakesOperationCompleted
            End If
            Me.InvokeAsync("GetVINMakes", New Object() {Year}, Me.GetVINMakesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetVINMakesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetVINMakesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetVINMakesCompleted(Me, New GetVINMakesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imperialfire.com/GetVINModels", RequestNamespace:="http://www.imperialfire.com/", ResponseNamespace:="http://www.imperialfire.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetVINModels(ByVal Year As String, ByVal Make As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetVINModels", New Object() {Year, Make})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetVINModels(ByVal Year As String, ByVal Make As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetVINModels", New Object() {Year, Make}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetVINModels(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetVINModelsAsync(ByVal Year As String, ByVal Make As String)
            Me.GetVINModelsAsync(Year, Make, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetVINModelsAsync(ByVal Year As String, ByVal Make As String, ByVal userState As Object)
            If (Me.GetVINModelsOperationCompleted Is Nothing) Then
                Me.GetVINModelsOperationCompleted = AddressOf Me.OnGetVINModelsOperationCompleted
            End If
            Me.InvokeAsync("GetVINModels", New Object() {Year, Make}, Me.GetVINModelsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetVINModelsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetVINModelsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetVINModelsCompleted(Me, New GetVINModelsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imperialfire.com/GetVehicleBodyStyles", RequestNamespace:="http://www.imperialfire.com/", ResponseNamespace:="http://www.imperialfire.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetVehicleBodyStyles(ByVal Year As String, ByVal Make As String, ByVal Model As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetVehicleBodyStyles", New Object() {Year, Make, Model})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetVehicleBodyStyles(ByVal Year As String, ByVal Make As String, ByVal Model As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetVehicleBodyStyles", New Object() {Year, Make, Model}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetVehicleBodyStyles(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetVehicleBodyStylesAsync(ByVal Year As String, ByVal Make As String, ByVal Model As String)
            Me.GetVehicleBodyStylesAsync(Year, Make, Model, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetVehicleBodyStylesAsync(ByVal Year As String, ByVal Make As String, ByVal Model As String, ByVal userState As Object)
            If (Me.GetVehicleBodyStylesOperationCompleted Is Nothing) Then
                Me.GetVehicleBodyStylesOperationCompleted = AddressOf Me.OnGetVehicleBodyStylesOperationCompleted
            End If
            Me.InvokeAsync("GetVehicleBodyStyles", New Object() {Year, Make, Model}, Me.GetVehicleBodyStylesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetVehicleBodyStylesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetVehicleBodyStylesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetVehicleBodyStylesCompleted(Me, New GetVehicleBodyStylesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imperialfire.com/GetVIN10", RequestNamespace:="http://www.imperialfire.com/", ResponseNamespace:="http://www.imperialfire.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetVIN10(ByVal Year As String, ByVal Make As String, ByVal Model As String, ByVal VehicleBodyStyleCode As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetVIN10", New Object() {Year, Make, Model, VehicleBodyStyleCode})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetVIN10(ByVal Year As String, ByVal Make As String, ByVal Model As String, ByVal VehicleBodyStyleCode As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetVIN10", New Object() {Year, Make, Model, VehicleBodyStyleCode}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetVIN10(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetVIN10Async(ByVal Year As String, ByVal Make As String, ByVal Model As String, ByVal VehicleBodyStyleCode As String)
            Me.GetVIN10Async(Year, Make, Model, VehicleBodyStyleCode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetVIN10Async(ByVal Year As String, ByVal Make As String, ByVal Model As String, ByVal VehicleBodyStyleCode As String, ByVal userState As Object)
            If (Me.GetVIN10OperationCompleted Is Nothing) Then
                Me.GetVIN10OperationCompleted = AddressOf Me.OnGetVIN10OperationCompleted
            End If
            Me.InvokeAsync("GetVIN10", New Object() {Year, Make, Model, VehicleBodyStyleCode}, Me.GetVIN10OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetVIN10OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetVIN10CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetVIN10Completed(Me, New GetVIN10CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imperialfire.com/GetPossibleVINRows", RequestNamespace:="http://www.imperialfire.com/", ResponseNamespace:="http://www.imperialfire.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetPossibleVINRows(ByVal Year As String, ByVal Make As String, ByVal Model As String, ByVal BodyStyle As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetPossibleVINRows", New Object() {Year, Make, Model, BodyStyle})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetPossibleVINRows(ByVal Year As String, ByVal Make As String, ByVal Model As String, ByVal BodyStyle As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetPossibleVINRows", New Object() {Year, Make, Model, BodyStyle}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetPossibleVINRows(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetPossibleVINRowsAsync(ByVal Year As String, ByVal Make As String, ByVal Model As String, ByVal BodyStyle As String)
            Me.GetPossibleVINRowsAsync(Year, Make, Model, BodyStyle, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetPossibleVINRowsAsync(ByVal Year As String, ByVal Make As String, ByVal Model As String, ByVal BodyStyle As String, ByVal userState As Object)
            If (Me.GetPossibleVINRowsOperationCompleted Is Nothing) Then
                Me.GetPossibleVINRowsOperationCompleted = AddressOf Me.OnGetPossibleVINRowsOperationCompleted
            End If
            Me.InvokeAsync("GetPossibleVINRows", New Object() {Year, Make, Model, BodyStyle}, Me.GetPossibleVINRowsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetPossibleVINRowsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetPossibleVINRowsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetPossibleVINRowsCompleted(Me, New GetPossibleVINRowsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imperialfire.com/VerifyCheckDigit", RequestNamespace:="http://www.imperialfire.com/", ResponseNamespace:="http://www.imperialfire.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function VerifyCheckDigit(ByVal vin As String) As String
            Dim results() As Object = Me.Invoke("VerifyCheckDigit", New Object() {vin})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginVerifyCheckDigit(ByVal vin As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("VerifyCheckDigit", New Object() {vin}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndVerifyCheckDigit(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub VerifyCheckDigitAsync(ByVal vin As String)
            Me.VerifyCheckDigitAsync(vin, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub VerifyCheckDigitAsync(ByVal vin As String, ByVal userState As Object)
            If (Me.VerifyCheckDigitOperationCompleted Is Nothing) Then
                Me.VerifyCheckDigitOperationCompleted = AddressOf Me.OnVerifyCheckDigitOperationCompleted
            End If
            Me.InvokeAsync("VerifyCheckDigit", New Object() {vin}, Me.VerifyCheckDigitOperationCompleted, userState)
        End Sub
        
        Private Sub OnVerifyCheckDigitOperationCompleted(ByVal arg As Object)
            If (Not (Me.VerifyCheckDigitCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent VerifyCheckDigitCompleted(Me, New VerifyCheckDigitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imperialfire.com/BridgeVINData", RequestNamespace:="http://www.imperialfire.com/", ResponseNamespace:="http://www.imperialfire.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function BridgeVINData(ByVal vin As String, ByVal Year As String, ByVal Make As String, ByVal Model As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("BridgeVINData", New Object() {vin, Year, Make, Model})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginBridgeVINData(ByVal vin As String, ByVal Year As String, ByVal Make As String, ByVal Model As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("BridgeVINData", New Object() {vin, Year, Make, Model}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndBridgeVINData(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub BridgeVINDataAsync(ByVal vin As String, ByVal Year As String, ByVal Make As String, ByVal Model As String)
            Me.BridgeVINDataAsync(vin, Year, Make, Model, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub BridgeVINDataAsync(ByVal vin As String, ByVal Year As String, ByVal Make As String, ByVal Model As String, ByVal userState As Object)
            If (Me.BridgeVINDataOperationCompleted Is Nothing) Then
                Me.BridgeVINDataOperationCompleted = AddressOf Me.OnBridgeVINDataOperationCompleted
            End If
            Me.InvokeAsync("BridgeVINData", New Object() {vin, Year, Make, Model}, Me.BridgeVINDataOperationCompleted, userState)
        End Sub
        
        Private Sub OnBridgeVINDataOperationCompleted(ByVal arg As Object)
            If (Not (Me.BridgeVINDataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent BridgeVINDataCompleted(Me, New BridgeVINDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imperialfire.com/BridgeVehVIN", RequestNamespace:="http://www.imperialfire.com/", ResponseNamespace:="http://www.imperialfire.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function BridgeVehVIN(ByVal oVehicle As clsVehicleUnit) As clsVehicleUnit
            Dim results() As Object = Me.Invoke("BridgeVehVIN", New Object() {oVehicle})
            Return CType(results(0),clsVehicleUnit)
        End Function
        
        '''<remarks/>
        Public Function BeginBridgeVehVIN(ByVal oVehicle As clsVehicleUnit, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("BridgeVehVIN", New Object() {oVehicle}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndBridgeVehVIN(ByVal asyncResult As System.IAsyncResult) As clsVehicleUnit
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),clsVehicleUnit)
        End Function
        
        '''<remarks/>
        Public Overloads Sub BridgeVehVINAsync(ByVal oVehicle As clsVehicleUnit)
            Me.BridgeVehVINAsync(oVehicle, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub BridgeVehVINAsync(ByVal oVehicle As clsVehicleUnit, ByVal userState As Object)
            If (Me.BridgeVehVINOperationCompleted Is Nothing) Then
                Me.BridgeVehVINOperationCompleted = AddressOf Me.OnBridgeVehVINOperationCompleted
            End If
            Me.InvokeAsync("BridgeVehVIN", New Object() {oVehicle}, Me.BridgeVehVINOperationCompleted, userState)
        End Sub
        
        Private Sub OnBridgeVehVINOperationCompleted(ByVal arg As Object)
            If (Not (Me.BridgeVehVINCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent BridgeVehVINCompleted(Me, New BridgeVehVINCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imperialfire.com/LookUpByVIN", RequestNamespace:="http://www.imperialfire.com/", ResponseNamespace:="http://www.imperialfire.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function LookUpByVIN(ByVal vin As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("LookUpByVIN", New Object() {vin})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginLookUpByVIN(ByVal vin As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("LookUpByVIN", New Object() {vin}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndLookUpByVIN(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LookUpByVINAsync(ByVal vin As String)
            Me.LookUpByVINAsync(vin, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LookUpByVINAsync(ByVal vin As String, ByVal userState As Object)
            If (Me.LookUpByVINOperationCompleted Is Nothing) Then
                Me.LookUpByVINOperationCompleted = AddressOf Me.OnLookUpByVINOperationCompleted
            End If
            Me.InvokeAsync("LookUpByVIN", New Object() {vin}, Me.LookUpByVINOperationCompleted, userState)
        End Sub
        
        Private Sub OnLookUpByVINOperationCompleted(ByVal arg As Object)
            If (Not (Me.LookUpByVINCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LookUpByVINCompleted(Me, New LookUpByVINCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imperialfire.com/GetVehicleByVIN", RequestNamespace:="http://www.imperialfire.com/", ResponseNamespace:="http://www.imperialfire.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetVehicleByVIN(ByVal oVeh As clsVehicleUnit) As clsVehicleUnit
            Dim results() As Object = Me.Invoke("GetVehicleByVIN", New Object() {oVeh})
            Return CType(results(0),clsVehicleUnit)
        End Function
        
        '''<remarks/>
        Public Function BeginGetVehicleByVIN(ByVal oVeh As clsVehicleUnit, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetVehicleByVIN", New Object() {oVeh}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetVehicleByVIN(ByVal asyncResult As System.IAsyncResult) As clsVehicleUnit
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),clsVehicleUnit)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetVehicleByVINAsync(ByVal oVeh As clsVehicleUnit)
            Me.GetVehicleByVINAsync(oVeh, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetVehicleByVINAsync(ByVal oVeh As clsVehicleUnit, ByVal userState As Object)
            If (Me.GetVehicleByVINOperationCompleted Is Nothing) Then
                Me.GetVehicleByVINOperationCompleted = AddressOf Me.OnGetVehicleByVINOperationCompleted
            End If
            Me.InvokeAsync("GetVehicleByVIN", New Object() {oVeh}, Me.GetVehicleByVINOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetVehicleByVINOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetVehicleByVINCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetVehicleByVINCompleted(Me, New GetVehicleByVINCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imperialfire.com/LookUpPASVIN", RequestNamespace:="http://www.imperialfire.com/", ResponseNamespace:="http://www.imperialfire.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function LookUpPASVIN(ByVal sVin As String, ByVal dtRateEffDate As Date) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("LookUpPASVIN", New Object() {sVin, dtRateEffDate})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginLookUpPASVIN(ByVal sVin As String, ByVal dtRateEffDate As Date, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("LookUpPASVIN", New Object() {sVin, dtRateEffDate}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndLookUpPASVIN(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LookUpPASVINAsync(ByVal sVin As String, ByVal dtRateEffDate As Date)
            Me.LookUpPASVINAsync(sVin, dtRateEffDate, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LookUpPASVINAsync(ByVal sVin As String, ByVal dtRateEffDate As Date, ByVal userState As Object)
            If (Me.LookUpPASVINOperationCompleted Is Nothing) Then
                Me.LookUpPASVINOperationCompleted = AddressOf Me.OnLookUpPASVINOperationCompleted
            End If
            Me.InvokeAsync("LookUpPASVIN", New Object() {sVin, dtRateEffDate}, Me.LookUpPASVINOperationCompleted, userState)
        End Sub
        
        Private Sub OnLookUpPASVINOperationCompleted(ByVal arg As Object)
            If (Not (Me.LookUpPASVINCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LookUpPASVINCompleted(Me, New LookUpPASVINCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imperialfire.com/ResetVINTable", RequestNamespace:="http://www.imperialfire.com/", ResponseNamespace:="http://www.imperialfire.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub ResetVINTable()
            Me.Invoke("ResetVINTable", New Object(-1) {})
        End Sub
        
        '''<remarks/>
        Public Function BeginResetVINTable(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ResetVINTable", New Object(-1) {}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Sub EndResetVINTable(ByVal asyncResult As System.IAsyncResult)
            Me.EndInvoke(asyncResult)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ResetVINTableAsync()
            Me.ResetVINTableAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ResetVINTableAsync(ByVal userState As Object)
            If (Me.ResetVINTableOperationCompleted Is Nothing) Then
                Me.ResetVINTableOperationCompleted = AddressOf Me.OnResetVINTableOperationCompleted
            End If
            Me.InvokeAsync("ResetVINTable", New Object(-1) {}, Me.ResetVINTableOperationCompleted, userState)
        End Sub
        
        Private Sub OnResetVINTableOperationCompleted(ByVal arg As Object)
            If (Not (Me.ResetVINTableCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ResetVINTableCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.imperialfire.com/CheckIfIncompleteVehicle", RequestNamespace:="http://www.imperialfire.com/", ResponseNamespace:="http://www.imperialfire.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CheckIfIncompleteVehicle(ByVal VIN As String, ByVal VehicleMakeCode As String) As Boolean
            Dim results() As Object = Me.Invoke("CheckIfIncompleteVehicle", New Object() {VIN, VehicleMakeCode})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginCheckIfIncompleteVehicle(ByVal VIN As String, ByVal VehicleMakeCode As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CheckIfIncompleteVehicle", New Object() {VIN, VehicleMakeCode}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCheckIfIncompleteVehicle(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CheckIfIncompleteVehicleAsync(ByVal VIN As String, ByVal VehicleMakeCode As String)
            Me.CheckIfIncompleteVehicleAsync(VIN, VehicleMakeCode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CheckIfIncompleteVehicleAsync(ByVal VIN As String, ByVal VehicleMakeCode As String, ByVal userState As Object)
            If (Me.CheckIfIncompleteVehicleOperationCompleted Is Nothing) Then
                Me.CheckIfIncompleteVehicleOperationCompleted = AddressOf Me.OnCheckIfIncompleteVehicleOperationCompleted
            End If
            Me.InvokeAsync("CheckIfIncompleteVehicle", New Object() {VIN, VehicleMakeCode}, Me.CheckIfIncompleteVehicleOperationCompleted, userState)
        End Sub
        
        Private Sub OnCheckIfIncompleteVehicleOperationCompleted(ByVal arg As Object)
            If (Not (Me.CheckIfIncompleteVehicleCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CheckIfIncompleteVehicleCompleted(Me, New CheckIfIncompleteVehicleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
    End Class
    
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
    Public Delegate Sub ResetTableCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
    Public Delegate Sub GetVINYearsCompletedEventHandler(ByVal sender As Object, ByVal e As GetVINYearsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetVINYearsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
    Public Delegate Sub GetVINMakesCompletedEventHandler(ByVal sender As Object, ByVal e As GetVINMakesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetVINMakesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
    Public Delegate Sub GetVINModelsCompletedEventHandler(ByVal sender As Object, ByVal e As GetVINModelsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetVINModelsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
    Public Delegate Sub GetVehicleBodyStylesCompletedEventHandler(ByVal sender As Object, ByVal e As GetVehicleBodyStylesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetVehicleBodyStylesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
    Public Delegate Sub GetVIN10CompletedEventHandler(ByVal sender As Object, ByVal e As GetVIN10CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetVIN10CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
    Public Delegate Sub GetPossibleVINRowsCompletedEventHandler(ByVal sender As Object, ByVal e As GetPossibleVINRowsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetPossibleVINRowsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
    Public Delegate Sub VerifyCheckDigitCompletedEventHandler(ByVal sender As Object, ByVal e As VerifyCheckDigitCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class VerifyCheckDigitCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
    Public Delegate Sub BridgeVINDataCompletedEventHandler(ByVal sender As Object, ByVal e As BridgeVINDataCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class BridgeVINDataCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
    Public Delegate Sub BridgeVehVINCompletedEventHandler(ByVal sender As Object, ByVal e As BridgeVehVINCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class BridgeVehVINCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As clsVehicleUnit
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),clsVehicleUnit)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
    Public Delegate Sub LookUpByVINCompletedEventHandler(ByVal sender As Object, ByVal e As LookUpByVINCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LookUpByVINCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
    Public Delegate Sub GetVehicleByVINCompletedEventHandler(ByVal sender As Object, ByVal e As GetVehicleByVINCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetVehicleByVINCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As clsVehicleUnit
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),clsVehicleUnit)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
    Public Delegate Sub LookUpPASVINCompletedEventHandler(ByVal sender As Object, ByVal e As LookUpPASVINCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LookUpPASVINCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
    Public Delegate Sub ResetVINTableCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
    Public Delegate Sub CheckIfIncompleteVehicleCompletedEventHandler(ByVal sender As Object, ByVal e As CheckIfIncompleteVehicleCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CheckIfIncompleteVehicleCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
End Namespace
