'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.18052
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18052.
'
Namespace MarketingCRMService
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="MarketingCRMServiceSoap", [Namespace]:="http://tempuri.org/")>  _
    Partial Public Class MarketingCRMService
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private InsertAgencyOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertLocationOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertBankOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetActiveProgramsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertProgramOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LoadAgencyOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ChangePasswordOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AuthenticateUserOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetLocationOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetOptionsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private isInSameGroupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private IsCommissionStatementPaperlessOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CommissionStatementPaperlessUpdateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CommissionLoginIsAllowedOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CommissionLoginCreateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CommissionLoginUpdateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CommissionLoginUpdateForAgentOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CommissionLoginIsRegisteredOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CommissionLoginIsRegisteredInfoValidOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CommissionLoginOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CommissionLoginEmailUpdateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ESignatureStatusUpdateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.RatingRulesService2.My.MySettings.Default.RatingRulesService2_MarketingCRMService_MarketingCRMService
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event InsertAgencyCompleted As InsertAgencyCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertLocationCompleted As InsertLocationCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertBankCompleted As InsertBankCompletedEventHandler
        
        '''<remarks/>
        Public Event GetActiveProgramsCompleted As GetActiveProgramsCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertProgramCompleted As InsertProgramCompletedEventHandler
        
        '''<remarks/>
        Public Event LoadAgencyCompleted As LoadAgencyCompletedEventHandler
        
        '''<remarks/>
        Public Event ChangePasswordCompleted As ChangePasswordCompletedEventHandler
        
        '''<remarks/>
        Public Event AuthenticateUserCompleted As AuthenticateUserCompletedEventHandler
        
        '''<remarks/>
        Public Event GetLocationCompleted As GetLocationCompletedEventHandler
        
        '''<remarks/>
        Public Event GetOptionsCompleted As GetOptionsCompletedEventHandler
        
        '''<remarks/>
        Public Event isInSameGroupCompleted As isInSameGroupCompletedEventHandler
        
        '''<remarks/>
        Public Event IsCommissionStatementPaperlessCompleted As IsCommissionStatementPaperlessCompletedEventHandler
        
        '''<remarks/>
        Public Event CommissionStatementPaperlessUpdateCompleted As CommissionStatementPaperlessUpdateCompletedEventHandler
        
        '''<remarks/>
        Public Event CommissionLoginIsAllowedCompleted As CommissionLoginIsAllowedCompletedEventHandler
        
        '''<remarks/>
        Public Event CommissionLoginCreateCompleted As CommissionLoginCreateCompletedEventHandler
        
        '''<remarks/>
        Public Event CommissionLoginUpdateCompleted As CommissionLoginUpdateCompletedEventHandler
        
        '''<remarks/>
        Public Event CommissionLoginUpdateForAgentCompleted As CommissionLoginUpdateForAgentCompletedEventHandler
        
        '''<remarks/>
        Public Event CommissionLoginIsRegisteredCompleted As CommissionLoginIsRegisteredCompletedEventHandler
        
        '''<remarks/>
        Public Event CommissionLoginIsRegisteredInfoValidCompleted As CommissionLoginIsRegisteredInfoValidCompletedEventHandler
        
        '''<remarks/>
        Public Event CommissionLoginCompleted As CommissionLoginCompletedEventHandler
        
        '''<remarks/>
        Public Event CommissionLoginEmailUpdateCompleted As CommissionLoginEmailUpdateCompletedEventHandler
        
        '''<remarks/>
        Public Event ESignatureStatusUpdateCompleted As ESignatureStatusUpdateCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertAgency", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertAgency(ByRef oAgency As Agency, ByVal isPASAgency As Boolean) As String
            Dim results() As Object = Me.Invoke("InsertAgency", New Object() {oAgency, isPASAgency})
            oAgency = CType(results(1),Agency)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertAgencyAsync(ByVal oAgency As Agency, ByVal isPASAgency As Boolean)
            Me.InsertAgencyAsync(oAgency, isPASAgency, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertAgencyAsync(ByVal oAgency As Agency, ByVal isPASAgency As Boolean, ByVal userState As Object)
            If (Me.InsertAgencyOperationCompleted Is Nothing) Then
                Me.InsertAgencyOperationCompleted = AddressOf Me.OnInsertAgencyOperationCompleted
            End If
            Me.InvokeAsync("InsertAgency", New Object() {oAgency, isPASAgency}, Me.InsertAgencyOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertAgencyOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertAgencyCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertAgencyCompleted(Me, New InsertAgencyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertLocation", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertLocation(ByRef oLoc As Location, ByRef oAgent As Agency, ByVal isPASAgency As Boolean) As String
            Dim results() As Object = Me.Invoke("InsertLocation", New Object() {oLoc, oAgent, isPASAgency})
            oLoc = CType(results(1),Location)
            oAgent = CType(results(2),Agency)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertLocationAsync(ByVal oLoc As Location, ByVal oAgent As Agency, ByVal isPASAgency As Boolean)
            Me.InsertLocationAsync(oLoc, oAgent, isPASAgency, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertLocationAsync(ByVal oLoc As Location, ByVal oAgent As Agency, ByVal isPASAgency As Boolean, ByVal userState As Object)
            If (Me.InsertLocationOperationCompleted Is Nothing) Then
                Me.InsertLocationOperationCompleted = AddressOf Me.OnInsertLocationOperationCompleted
            End If
            Me.InvokeAsync("InsertLocation", New Object() {oLoc, oAgent, isPASAgency}, Me.InsertLocationOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertLocationOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertLocationCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertLocationCompleted(Me, New InsertLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertBank", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertBank(ByVal oObject As Object, ByRef oBank As Bank) As String
            Dim results() As Object = Me.Invoke("InsertBank", New Object() {oObject, oBank})
            oBank = CType(results(1),Bank)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertBankAsync(ByVal oObject As Object, ByVal oBank As Bank)
            Me.InsertBankAsync(oObject, oBank, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertBankAsync(ByVal oObject As Object, ByVal oBank As Bank, ByVal userState As Object)
            If (Me.InsertBankOperationCompleted Is Nothing) Then
                Me.InsertBankOperationCompleted = AddressOf Me.OnInsertBankOperationCompleted
            End If
            Me.InvokeAsync("InsertBank", New Object() {oObject, oBank}, Me.InsertBankOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertBankOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertBankCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertBankCompleted(Me, New InsertBankCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetActivePrograms", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetActivePrograms(ByVal productCode As Integer, ByVal stateCode As String) As Program()
            Dim results() As Object = Me.Invoke("GetActivePrograms", New Object() {productCode, stateCode})
            Return CType(results(0),Program())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetActiveProgramsAsync(ByVal productCode As Integer, ByVal stateCode As String)
            Me.GetActiveProgramsAsync(productCode, stateCode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetActiveProgramsAsync(ByVal productCode As Integer, ByVal stateCode As String, ByVal userState As Object)
            If (Me.GetActiveProgramsOperationCompleted Is Nothing) Then
                Me.GetActiveProgramsOperationCompleted = AddressOf Me.OnGetActiveProgramsOperationCompleted
            End If
            Me.InvokeAsync("GetActivePrograms", New Object() {productCode, stateCode}, Me.GetActiveProgramsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetActiveProgramsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetActiveProgramsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetActiveProgramsCompleted(Me, New GetActiveProgramsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertProgram", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertProgram(ByRef oProg As LocationProgram, ByVal ProgramCode As String) As String
            Dim results() As Object = Me.Invoke("InsertProgram", New Object() {oProg, ProgramCode})
            oProg = CType(results(1),LocationProgram)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertProgramAsync(ByVal oProg As LocationProgram, ByVal ProgramCode As String)
            Me.InsertProgramAsync(oProg, ProgramCode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertProgramAsync(ByVal oProg As LocationProgram, ByVal ProgramCode As String, ByVal userState As Object)
            If (Me.InsertProgramOperationCompleted Is Nothing) Then
                Me.InsertProgramOperationCompleted = AddressOf Me.OnInsertProgramOperationCompleted
            End If
            Me.InvokeAsync("InsertProgram", New Object() {oProg, ProgramCode}, Me.InsertProgramOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertProgramOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertProgramCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertProgramCompleted(Me, New InsertProgramCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadAgency", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function LoadAgency(ByVal AgentCode As String, ByVal LoadAll As Boolean, ByVal ProgramCode As String) As Agency
            Dim results() As Object = Me.Invoke("LoadAgency", New Object() {AgentCode, LoadAll, ProgramCode})
            Return CType(results(0),Agency)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LoadAgencyAsync(ByVal AgentCode As String, ByVal LoadAll As Boolean, ByVal ProgramCode As String)
            Me.LoadAgencyAsync(AgentCode, LoadAll, ProgramCode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LoadAgencyAsync(ByVal AgentCode As String, ByVal LoadAll As Boolean, ByVal ProgramCode As String, ByVal userState As Object)
            If (Me.LoadAgencyOperationCompleted Is Nothing) Then
                Me.LoadAgencyOperationCompleted = AddressOf Me.OnLoadAgencyOperationCompleted
            End If
            Me.InvokeAsync("LoadAgency", New Object() {AgentCode, LoadAll, ProgramCode}, Me.LoadAgencyOperationCompleted, userState)
        End Sub
        
        Private Sub OnLoadAgencyOperationCompleted(ByVal arg As Object)
            If (Not (Me.LoadAgencyCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LoadAgencyCompleted(Me, New LoadAgencyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ChangePassword", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ChangePassword(ByVal sUserName As String, ByVal sOldPassword As String, ByVal sNewPassword As String) As String
            Dim results() As Object = Me.Invoke("ChangePassword", New Object() {sUserName, sOldPassword, sNewPassword})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ChangePasswordAsync(ByVal sUserName As String, ByVal sOldPassword As String, ByVal sNewPassword As String)
            Me.ChangePasswordAsync(sUserName, sOldPassword, sNewPassword, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ChangePasswordAsync(ByVal sUserName As String, ByVal sOldPassword As String, ByVal sNewPassword As String, ByVal userState As Object)
            If (Me.ChangePasswordOperationCompleted Is Nothing) Then
                Me.ChangePasswordOperationCompleted = AddressOf Me.OnChangePasswordOperationCompleted
            End If
            Me.InvokeAsync("ChangePassword", New Object() {sUserName, sOldPassword, sNewPassword}, Me.ChangePasswordOperationCompleted, userState)
        End Sub
        
        Private Sub OnChangePasswordOperationCompleted(ByVal arg As Object)
            If (Not (Me.ChangePasswordCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ChangePasswordCompleted(Me, New ChangePasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AuthenticateUser", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AuthenticateUser(ByVal sUserName As String, ByVal sPassword As String) As Location
            Dim results() As Object = Me.Invoke("AuthenticateUser", New Object() {sUserName, sPassword})
            Return CType(results(0),Location)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AuthenticateUserAsync(ByVal sUserName As String, ByVal sPassword As String)
            Me.AuthenticateUserAsync(sUserName, sPassword, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AuthenticateUserAsync(ByVal sUserName As String, ByVal sPassword As String, ByVal userState As Object)
            If (Me.AuthenticateUserOperationCompleted Is Nothing) Then
                Me.AuthenticateUserOperationCompleted = AddressOf Me.OnAuthenticateUserOperationCompleted
            End If
            Me.InvokeAsync("AuthenticateUser", New Object() {sUserName, sPassword}, Me.AuthenticateUserOperationCompleted, userState)
        End Sub
        
        Private Sub OnAuthenticateUserOperationCompleted(ByVal arg As Object)
            If (Not (Me.AuthenticateUserCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AuthenticateUserCompleted(Me, New AuthenticateUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLocation", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetLocation(ByVal tokenCred As TokenCredential, ByVal timeToExtendTokenInTicks As Long) As Location
            Dim results() As Object = Me.Invoke("GetLocation", New Object() {tokenCred, timeToExtendTokenInTicks})
            Return CType(results(0),Location)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetLocationAsync(ByVal tokenCred As TokenCredential, ByVal timeToExtendTokenInTicks As Long)
            Me.GetLocationAsync(tokenCred, timeToExtendTokenInTicks, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetLocationAsync(ByVal tokenCred As TokenCredential, ByVal timeToExtendTokenInTicks As Long, ByVal userState As Object)
            If (Me.GetLocationOperationCompleted Is Nothing) Then
                Me.GetLocationOperationCompleted = AddressOf Me.OnGetLocationOperationCompleted
            End If
            Me.InvokeAsync("GetLocation", New Object() {tokenCred, timeToExtendTokenInTicks}, Me.GetLocationOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetLocationOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetLocationCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetLocationCompleted(Me, New GetLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOptions", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetOptions(ByVal AgentCode As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetOptions", New Object() {AgentCode})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetOptionsAsync(ByVal AgentCode As String)
            Me.GetOptionsAsync(AgentCode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetOptionsAsync(ByVal AgentCode As String, ByVal userState As Object)
            If (Me.GetOptionsOperationCompleted Is Nothing) Then
                Me.GetOptionsOperationCompleted = AddressOf Me.OnGetOptionsOperationCompleted
            End If
            Me.InvokeAsync("GetOptions", New Object() {AgentCode}, Me.GetOptionsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetOptionsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetOptionsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetOptionsCompleted(Me, New GetOptionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/isInSameGroup", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function isInSameGroup(ByVal AgentCode1 As String, ByVal AgentCode2 As String) As String
            Dim results() As Object = Me.Invoke("isInSameGroup", New Object() {AgentCode1, AgentCode2})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub isInSameGroupAsync(ByVal AgentCode1 As String, ByVal AgentCode2 As String)
            Me.isInSameGroupAsync(AgentCode1, AgentCode2, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub isInSameGroupAsync(ByVal AgentCode1 As String, ByVal AgentCode2 As String, ByVal userState As Object)
            If (Me.isInSameGroupOperationCompleted Is Nothing) Then
                Me.isInSameGroupOperationCompleted = AddressOf Me.OnisInSameGroupOperationCompleted
            End If
            Me.InvokeAsync("isInSameGroup", New Object() {AgentCode1, AgentCode2}, Me.isInSameGroupOperationCompleted, userState)
        End Sub
        
        Private Sub OnisInSameGroupOperationCompleted(ByVal arg As Object)
            If (Not (Me.isInSameGroupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent isInSameGroupCompleted(Me, New isInSameGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsCommissionStatementPaperless", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function IsCommissionStatementPaperless(ByVal agencyId As String) As Boolean
            Dim results() As Object = Me.Invoke("IsCommissionStatementPaperless", New Object() {agencyId})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub IsCommissionStatementPaperlessAsync(ByVal agencyId As String)
            Me.IsCommissionStatementPaperlessAsync(agencyId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub IsCommissionStatementPaperlessAsync(ByVal agencyId As String, ByVal userState As Object)
            If (Me.IsCommissionStatementPaperlessOperationCompleted Is Nothing) Then
                Me.IsCommissionStatementPaperlessOperationCompleted = AddressOf Me.OnIsCommissionStatementPaperlessOperationCompleted
            End If
            Me.InvokeAsync("IsCommissionStatementPaperless", New Object() {agencyId}, Me.IsCommissionStatementPaperlessOperationCompleted, userState)
        End Sub
        
        Private Sub OnIsCommissionStatementPaperlessOperationCompleted(ByVal arg As Object)
            If (Not (Me.IsCommissionStatementPaperlessCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent IsCommissionStatementPaperlessCompleted(Me, New IsCommissionStatementPaperlessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CommissionStatementPaperlessUpdate", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CommissionStatementPaperlessUpdate(ByVal agencyId As String, ByVal isPaperless As Boolean) As Boolean
            Dim results() As Object = Me.Invoke("CommissionStatementPaperlessUpdate", New Object() {agencyId, isPaperless})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CommissionStatementPaperlessUpdateAsync(ByVal agencyId As String, ByVal isPaperless As Boolean)
            Me.CommissionStatementPaperlessUpdateAsync(agencyId, isPaperless, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CommissionStatementPaperlessUpdateAsync(ByVal agencyId As String, ByVal isPaperless As Boolean, ByVal userState As Object)
            If (Me.CommissionStatementPaperlessUpdateOperationCompleted Is Nothing) Then
                Me.CommissionStatementPaperlessUpdateOperationCompleted = AddressOf Me.OnCommissionStatementPaperlessUpdateOperationCompleted
            End If
            Me.InvokeAsync("CommissionStatementPaperlessUpdate", New Object() {agencyId, isPaperless}, Me.CommissionStatementPaperlessUpdateOperationCompleted, userState)
        End Sub
        
        Private Sub OnCommissionStatementPaperlessUpdateOperationCompleted(ByVal arg As Object)
            If (Not (Me.CommissionStatementPaperlessUpdateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CommissionStatementPaperlessUpdateCompleted(Me, New CommissionStatementPaperlessUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CommissionLoginIsAllowed", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CommissionLoginIsAllowed(ByVal LocationCode As String) As Boolean
            Dim results() As Object = Me.Invoke("CommissionLoginIsAllowed", New Object() {LocationCode})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CommissionLoginIsAllowedAsync(ByVal LocationCode As String)
            Me.CommissionLoginIsAllowedAsync(LocationCode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CommissionLoginIsAllowedAsync(ByVal LocationCode As String, ByVal userState As Object)
            If (Me.CommissionLoginIsAllowedOperationCompleted Is Nothing) Then
                Me.CommissionLoginIsAllowedOperationCompleted = AddressOf Me.OnCommissionLoginIsAllowedOperationCompleted
            End If
            Me.InvokeAsync("CommissionLoginIsAllowed", New Object() {LocationCode}, Me.CommissionLoginIsAllowedOperationCompleted, userState)
        End Sub
        
        Private Sub OnCommissionLoginIsAllowedOperationCompleted(ByVal arg As Object)
            If (Not (Me.CommissionLoginIsAllowedCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CommissionLoginIsAllowedCompleted(Me, New CommissionLoginIsAllowedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CommissionLoginCreate", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CommissionLoginCreate(ByVal LocationCode As String, ByVal Password As String, ByVal CreatedBy As String) As Boolean
            Dim results() As Object = Me.Invoke("CommissionLoginCreate", New Object() {LocationCode, Password, CreatedBy})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CommissionLoginCreateAsync(ByVal LocationCode As String, ByVal Password As String, ByVal CreatedBy As String)
            Me.CommissionLoginCreateAsync(LocationCode, Password, CreatedBy, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CommissionLoginCreateAsync(ByVal LocationCode As String, ByVal Password As String, ByVal CreatedBy As String, ByVal userState As Object)
            If (Me.CommissionLoginCreateOperationCompleted Is Nothing) Then
                Me.CommissionLoginCreateOperationCompleted = AddressOf Me.OnCommissionLoginCreateOperationCompleted
            End If
            Me.InvokeAsync("CommissionLoginCreate", New Object() {LocationCode, Password, CreatedBy}, Me.CommissionLoginCreateOperationCompleted, userState)
        End Sub
        
        Private Sub OnCommissionLoginCreateOperationCompleted(ByVal arg As Object)
            If (Not (Me.CommissionLoginCreateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CommissionLoginCreateCompleted(Me, New CommissionLoginCreateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CommissionLoginUpdate", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CommissionLoginUpdate(ByVal LocationCode As String, ByVal NewPassword As String, ByVal UpdatedPasswordBy As String) As Boolean
            Dim results() As Object = Me.Invoke("CommissionLoginUpdate", New Object() {LocationCode, NewPassword, UpdatedPasswordBy})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CommissionLoginUpdateAsync(ByVal LocationCode As String, ByVal NewPassword As String, ByVal UpdatedPasswordBy As String)
            Me.CommissionLoginUpdateAsync(LocationCode, NewPassword, UpdatedPasswordBy, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CommissionLoginUpdateAsync(ByVal LocationCode As String, ByVal NewPassword As String, ByVal UpdatedPasswordBy As String, ByVal userState As Object)
            If (Me.CommissionLoginUpdateOperationCompleted Is Nothing) Then
                Me.CommissionLoginUpdateOperationCompleted = AddressOf Me.OnCommissionLoginUpdateOperationCompleted
            End If
            Me.InvokeAsync("CommissionLoginUpdate", New Object() {LocationCode, NewPassword, UpdatedPasswordBy}, Me.CommissionLoginUpdateOperationCompleted, userState)
        End Sub
        
        Private Sub OnCommissionLoginUpdateOperationCompleted(ByVal arg As Object)
            If (Not (Me.CommissionLoginUpdateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CommissionLoginUpdateCompleted(Me, New CommissionLoginUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CommissionLoginUpdateForAgent", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CommissionLoginUpdateForAgent(ByVal LocationCode As String, ByVal OldPassword As String, ByVal NewPassword As String, ByVal UpdatedPasswordBy As String) As Boolean
            Dim results() As Object = Me.Invoke("CommissionLoginUpdateForAgent", New Object() {LocationCode, OldPassword, NewPassword, UpdatedPasswordBy})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CommissionLoginUpdateForAgentAsync(ByVal LocationCode As String, ByVal OldPassword As String, ByVal NewPassword As String, ByVal UpdatedPasswordBy As String)
            Me.CommissionLoginUpdateForAgentAsync(LocationCode, OldPassword, NewPassword, UpdatedPasswordBy, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CommissionLoginUpdateForAgentAsync(ByVal LocationCode As String, ByVal OldPassword As String, ByVal NewPassword As String, ByVal UpdatedPasswordBy As String, ByVal userState As Object)
            If (Me.CommissionLoginUpdateForAgentOperationCompleted Is Nothing) Then
                Me.CommissionLoginUpdateForAgentOperationCompleted = AddressOf Me.OnCommissionLoginUpdateForAgentOperationCompleted
            End If
            Me.InvokeAsync("CommissionLoginUpdateForAgent", New Object() {LocationCode, OldPassword, NewPassword, UpdatedPasswordBy}, Me.CommissionLoginUpdateForAgentOperationCompleted, userState)
        End Sub
        
        Private Sub OnCommissionLoginUpdateForAgentOperationCompleted(ByVal arg As Object)
            If (Not (Me.CommissionLoginUpdateForAgentCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CommissionLoginUpdateForAgentCompleted(Me, New CommissionLoginUpdateForAgentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CommissionLoginIsRegistered", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CommissionLoginIsRegistered(ByVal LocationCode As String) As Boolean
            Dim results() As Object = Me.Invoke("CommissionLoginIsRegistered", New Object() {LocationCode})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CommissionLoginIsRegisteredAsync(ByVal LocationCode As String)
            Me.CommissionLoginIsRegisteredAsync(LocationCode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CommissionLoginIsRegisteredAsync(ByVal LocationCode As String, ByVal userState As Object)
            If (Me.CommissionLoginIsRegisteredOperationCompleted Is Nothing) Then
                Me.CommissionLoginIsRegisteredOperationCompleted = AddressOf Me.OnCommissionLoginIsRegisteredOperationCompleted
            End If
            Me.InvokeAsync("CommissionLoginIsRegistered", New Object() {LocationCode}, Me.CommissionLoginIsRegisteredOperationCompleted, userState)
        End Sub
        
        Private Sub OnCommissionLoginIsRegisteredOperationCompleted(ByVal arg As Object)
            If (Not (Me.CommissionLoginIsRegisteredCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CommissionLoginIsRegisteredCompleted(Me, New CommissionLoginIsRegisteredCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CommissionLoginIsRegisteredInfoValid", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CommissionLoginIsRegisteredInfoValid(ByVal LocationCode As String, ByVal TaxIDorSSN As String, ByVal ZipCode As String) As Boolean
            Dim results() As Object = Me.Invoke("CommissionLoginIsRegisteredInfoValid", New Object() {LocationCode, TaxIDorSSN, ZipCode})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CommissionLoginIsRegisteredInfoValidAsync(ByVal LocationCode As String, ByVal TaxIDorSSN As String, ByVal ZipCode As String)
            Me.CommissionLoginIsRegisteredInfoValidAsync(LocationCode, TaxIDorSSN, ZipCode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CommissionLoginIsRegisteredInfoValidAsync(ByVal LocationCode As String, ByVal TaxIDorSSN As String, ByVal ZipCode As String, ByVal userState As Object)
            If (Me.CommissionLoginIsRegisteredInfoValidOperationCompleted Is Nothing) Then
                Me.CommissionLoginIsRegisteredInfoValidOperationCompleted = AddressOf Me.OnCommissionLoginIsRegisteredInfoValidOperationCompleted
            End If
            Me.InvokeAsync("CommissionLoginIsRegisteredInfoValid", New Object() {LocationCode, TaxIDorSSN, ZipCode}, Me.CommissionLoginIsRegisteredInfoValidOperationCompleted, userState)
        End Sub
        
        Private Sub OnCommissionLoginIsRegisteredInfoValidOperationCompleted(ByVal arg As Object)
            If (Not (Me.CommissionLoginIsRegisteredInfoValidCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CommissionLoginIsRegisteredInfoValidCompleted(Me, New CommissionLoginIsRegisteredInfoValidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CommissionLogin", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CommissionLogin(ByVal LocationCode As String, ByVal Password As String) As Boolean
            Dim results() As Object = Me.Invoke("CommissionLogin", New Object() {LocationCode, Password})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CommissionLoginAsync(ByVal LocationCode As String, ByVal Password As String)
            Me.CommissionLoginAsync(LocationCode, Password, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CommissionLoginAsync(ByVal LocationCode As String, ByVal Password As String, ByVal userState As Object)
            If (Me.CommissionLoginOperationCompleted Is Nothing) Then
                Me.CommissionLoginOperationCompleted = AddressOf Me.OnCommissionLoginOperationCompleted
            End If
            Me.InvokeAsync("CommissionLogin", New Object() {LocationCode, Password}, Me.CommissionLoginOperationCompleted, userState)
        End Sub
        
        Private Sub OnCommissionLoginOperationCompleted(ByVal arg As Object)
            If (Not (Me.CommissionLoginCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CommissionLoginCompleted(Me, New CommissionLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CommissionLoginEmailUpdate", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CommissionLoginEmailUpdate(ByVal LocationCode As String, ByVal NewEmail As String) As Boolean
            Dim results() As Object = Me.Invoke("CommissionLoginEmailUpdate", New Object() {LocationCode, NewEmail})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CommissionLoginEmailUpdateAsync(ByVal LocationCode As String, ByVal NewEmail As String)
            Me.CommissionLoginEmailUpdateAsync(LocationCode, NewEmail, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CommissionLoginEmailUpdateAsync(ByVal LocationCode As String, ByVal NewEmail As String, ByVal userState As Object)
            If (Me.CommissionLoginEmailUpdateOperationCompleted Is Nothing) Then
                Me.CommissionLoginEmailUpdateOperationCompleted = AddressOf Me.OnCommissionLoginEmailUpdateOperationCompleted
            End If
            Me.InvokeAsync("CommissionLoginEmailUpdate", New Object() {LocationCode, NewEmail}, Me.CommissionLoginEmailUpdateOperationCompleted, userState)
        End Sub
        
        Private Sub OnCommissionLoginEmailUpdateOperationCompleted(ByVal arg As Object)
            If (Not (Me.CommissionLoginEmailUpdateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CommissionLoginEmailUpdateCompleted(Me, New CommissionLoginEmailUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ESignatureStatusUpdate", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ESignatureStatusUpdate(ByVal agencyId As String, ByVal isESignature As Boolean) As Boolean
            Dim results() As Object = Me.Invoke("ESignatureStatusUpdate", New Object() {agencyId, isESignature})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ESignatureStatusUpdateAsync(ByVal agencyId As String, ByVal isESignature As Boolean)
            Me.ESignatureStatusUpdateAsync(agencyId, isESignature, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ESignatureStatusUpdateAsync(ByVal agencyId As String, ByVal isESignature As Boolean, ByVal userState As Object)
            If (Me.ESignatureStatusUpdateOperationCompleted Is Nothing) Then
                Me.ESignatureStatusUpdateOperationCompleted = AddressOf Me.OnESignatureStatusUpdateOperationCompleted
            End If
            Me.InvokeAsync("ESignatureStatusUpdate", New Object() {agencyId, isESignature}, Me.ESignatureStatusUpdateOperationCompleted, userState)
        End Sub
        
        Private Sub OnESignatureStatusUpdateOperationCompleted(ByVal arg As Object)
            If (Not (Me.ESignatureStatusUpdateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ESignatureStatusUpdateCompleted(Me, New ESignatureStatusUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class Agency
        
        Private agencyIDField As Decimal
        
        Private nameField As String
        
        Private dBAField As String
        
        Private busTypeCodeField As String
        
        Private uRLField As String
        
        Private agentCodeField As String
        
        Private issue1099Field As Boolean
        
        Private emailRptGrpField As Boolean
        
        Private nameLicensedField As String
        
        Private licenseNumField As String
        
        Private dateField As Date
        
        Private enteredByField As String
        
        Private locationsField() As Location
        
        '''<remarks/>
        Public Property AgencyID() As Decimal
            Get
                Return Me.agencyIDField
            End Get
            Set
                Me.agencyIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DBA() As String
            Get
                Return Me.dBAField
            End Get
            Set
                Me.dBAField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BusTypeCode() As String
            Get
                Return Me.busTypeCodeField
            End Get
            Set
                Me.busTypeCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property URL() As String
            Get
                Return Me.uRLField
            End Get
            Set
                Me.uRLField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AgentCode() As String
            Get
                Return Me.agentCodeField
            End Get
            Set
                Me.agentCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property issue1099() As Boolean
            Get
                Return Me.issue1099Field
            End Get
            Set
                Me.issue1099Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmailRptGrp() As Boolean
            Get
                Return Me.emailRptGrpField
            End Get
            Set
                Me.emailRptGrpField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NameLicensed() As String
            Get
                Return Me.nameLicensedField
            End Get
            Set
                Me.nameLicensedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LicenseNum() As String
            Get
                Return Me.licenseNumField
            End Get
            Set
                Me.licenseNumField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property [Date]() As Date
            Get
                Return Me.dateField
            End Get
            Set
                Me.dateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EnteredBy() As String
            Get
                Return Me.enteredByField
            End Get
            Set
                Me.enteredByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Locations() As Location()
            Get
                Return Me.locationsField
            End Get
            Set
                Me.locationsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class Location
        
        Private locationIDField As Decimal
        
        Private locationNameField As String
        
        Private address1Field As String
        
        Private address2Field As String
        
        Private cityField As String
        
        Private stateAbbrField As String
        
        Private zipCodeField As String
        
        Private geoCoordLatField As String
        
        Private geoCoordLongField As String
        
        Private phone1Field As String
        
        Private phone2Field As String
        
        Private faxField As String
        
        Private emailAddrField As String
        
        Private agencyIDField As System.Nullable(Of Decimal)
        
        Private repIDField As System.Nullable(Of Decimal)
        
        Private isActiveField As Boolean
        
        Private isShipAddrField As Boolean
        
        Private isStatementAddrField As Boolean
        
        Private isESignatureField As Boolean
        
        Private emailRptAgtField As Boolean
        
        Private epayField As Boolean
        
        Private edocField As Boolean
        
        Private defaultAgencyCodeField As String
        
        Private statusCodeField As String
        
        Private taxIDField As String
        
        Private sSNField As String
        
        Private transferToAgentField As String
        
        Private comparativeRaterField As String
        
        Private dateField As Date
        
        Private enteredByField As String
        
        Private altAddressesField() As AltAddress
        
        Private locationBanksField() As LocationBank
        
        Private locationIVANsField() As LocationIVAN
        
        Private locationProgramsField() As LocationProgram
        
        Private repField As Rep
        
        '''<remarks/>
        Public Property LocationID() As Decimal
            Get
                Return Me.locationIDField
            End Get
            Set
                Me.locationIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LocationName() As String
            Get
                Return Me.locationNameField
            End Get
            Set
                Me.locationNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Address1() As String
            Get
                Return Me.address1Field
            End Get
            Set
                Me.address1Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Address2() As String
            Get
                Return Me.address2Field
            End Get
            Set
                Me.address2Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property City() As String
            Get
                Return Me.cityField
            End Get
            Set
                Me.cityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property StateAbbr() As String
            Get
                Return Me.stateAbbrField
            End Get
            Set
                Me.stateAbbrField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ZipCode() As String
            Get
                Return Me.zipCodeField
            End Get
            Set
                Me.zipCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property GeoCoordLat() As String
            Get
                Return Me.geoCoordLatField
            End Get
            Set
                Me.geoCoordLatField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property GeoCoordLong() As String
            Get
                Return Me.geoCoordLongField
            End Get
            Set
                Me.geoCoordLongField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Phone1() As String
            Get
                Return Me.phone1Field
            End Get
            Set
                Me.phone1Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Phone2() As String
            Get
                Return Me.phone2Field
            End Get
            Set
                Me.phone2Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Fax() As String
            Get
                Return Me.faxField
            End Get
            Set
                Me.faxField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmailAddr() As String
            Get
                Return Me.emailAddrField
            End Get
            Set
                Me.emailAddrField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property AgencyID() As System.Nullable(Of Decimal)
            Get
                Return Me.agencyIDField
            End Get
            Set
                Me.agencyIDField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property RepID() As System.Nullable(Of Decimal)
            Get
                Return Me.repIDField
            End Get
            Set
                Me.repIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property isActive() As Boolean
            Get
                Return Me.isActiveField
            End Get
            Set
                Me.isActiveField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property isShipAddr() As Boolean
            Get
                Return Me.isShipAddrField
            End Get
            Set
                Me.isShipAddrField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property isStatementAddr() As Boolean
            Get
                Return Me.isStatementAddrField
            End Get
            Set
                Me.isStatementAddrField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property isESignature() As Boolean
            Get
                Return Me.isESignatureField
            End Get
            Set
                Me.isESignatureField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmailRptAgt() As Boolean
            Get
                Return Me.emailRptAgtField
            End Get
            Set
                Me.emailRptAgtField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Epay() As Boolean
            Get
                Return Me.epayField
            End Get
            Set
                Me.epayField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Edoc() As Boolean
            Get
                Return Me.edocField
            End Get
            Set
                Me.edocField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DefaultAgencyCode() As String
            Get
                Return Me.defaultAgencyCodeField
            End Get
            Set
                Me.defaultAgencyCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property StatusCode() As String
            Get
                Return Me.statusCodeField
            End Get
            Set
                Me.statusCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TaxID() As String
            Get
                Return Me.taxIDField
            End Get
            Set
                Me.taxIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SSN() As String
            Get
                Return Me.sSNField
            End Get
            Set
                Me.sSNField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TransferToAgent() As String
            Get
                Return Me.transferToAgentField
            End Get
            Set
                Me.transferToAgentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ComparativeRater() As String
            Get
                Return Me.comparativeRaterField
            End Get
            Set
                Me.comparativeRaterField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property [Date]() As Date
            Get
                Return Me.dateField
            End Get
            Set
                Me.dateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EnteredBy() As String
            Get
                Return Me.enteredByField
            End Get
            Set
                Me.enteredByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AltAddresses() As AltAddress()
            Get
                Return Me.altAddressesField
            End Get
            Set
                Me.altAddressesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LocationBanks() As LocationBank()
            Get
                Return Me.locationBanksField
            End Get
            Set
                Me.locationBanksField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LocationIVANs() As LocationIVAN()
            Get
                Return Me.locationIVANsField
            End Get
            Set
                Me.locationIVANsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LocationPrograms() As LocationProgram()
            Get
                Return Me.locationProgramsField
            End Get
            Set
                Me.locationProgramsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Rep() As Rep
            Get
                Return Me.repField
            End Get
            Set
                Me.repField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class AltAddress
        
        Private addressIDField As Decimal
        
        Private locationIDField As Decimal
        
        Private addressTypeField As String
        
        Private address1Field As String
        
        Private address2Field As String
        
        Private cityField As String
        
        Private stateField As String
        
        Private zipField As String
        
        Private isActiveField As Boolean
        
        Private dateField As Date
        
        Private enteredByField As String
        
        '''<remarks/>
        Public Property AddressID() As Decimal
            Get
                Return Me.addressIDField
            End Get
            Set
                Me.addressIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LocationID() As Decimal
            Get
                Return Me.locationIDField
            End Get
            Set
                Me.locationIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AddressType() As String
            Get
                Return Me.addressTypeField
            End Get
            Set
                Me.addressTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Address1() As String
            Get
                Return Me.address1Field
            End Get
            Set
                Me.address1Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Address2() As String
            Get
                Return Me.address2Field
            End Get
            Set
                Me.address2Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property City() As String
            Get
                Return Me.cityField
            End Get
            Set
                Me.cityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property State() As String
            Get
                Return Me.stateField
            End Get
            Set
                Me.stateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Zip() As String
            Get
                Return Me.zipField
            End Get
            Set
                Me.zipField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property isActive() As Boolean
            Get
                Return Me.isActiveField
            End Get
            Set
                Me.isActiveField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property [Date]() As Date
            Get
                Return Me.dateField
            End Get
            Set
                Me.dateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EnteredBy() As String
            Get
                Return Me.enteredByField
            End Get
            Set
                Me.enteredByField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class TimeSpan
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class ExtensionDataObject
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class TokenCredential
        
        Private extensionDataField As ExtensionDataObject
        
        Private sourceField As String
        
        Private timeToExtendTokenField As TimeSpan
        
        Private tokenValueField As String
        
        '''<remarks/>
        Public Property ExtensionData() As ExtensionDataObject
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Source() As String
            Get
                Return Me.sourceField
            End Get
            Set
                Me.sourceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TimeToExtendToken() As TimeSpan
            Get
                Return Me.timeToExtendTokenField
            End Get
            Set
                Me.timeToExtendTokenField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TokenValue() As String
            Get
                Return Me.tokenValueField
            End Get
            Set
                Me.tokenValueField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class Program
        
        Private programIDField As Integer
        
        Private programCodeField As String
        
        Private productCodeField As Integer
        
        Private stateCodeField As String
        
        Private appliesToCodeField As Char
        
        Private programTypeField As String
        
        Private productField As String
        
        Private expDateField As Date
        
        '''<remarks/>
        Public Property ProgramID() As Integer
            Get
                Return Me.programIDField
            End Get
            Set
                Me.programIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ProgramCode() As String
            Get
                Return Me.programCodeField
            End Get
            Set
                Me.programCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ProductCode() As Integer
            Get
                Return Me.productCodeField
            End Get
            Set
                Me.productCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property StateCode() As String
            Get
                Return Me.stateCodeField
            End Get
            Set
                Me.stateCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AppliesToCode() As Char
            Get
                Return Me.appliesToCodeField
            End Get
            Set
                Me.appliesToCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ProgramType() As String
            Get
                Return Me.programTypeField
            End Get
            Set
                Me.programTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Product() As String
            Get
                Return Me.productField
            End Get
            Set
                Me.productField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ExpDate() As Date
            Get
                Return Me.expDateField
            End Get
            Set
                Me.expDateField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class Rep
        
        Private repIDField As Decimal
        
        Private nameField As String
        
        Private phoneField As String
        
        Private phoneExtField As String
        
        Private emailField As String
        
        Private territoryNameField As String
        
        '''<remarks/>
        Public Property RepID() As Decimal
            Get
                Return Me.repIDField
            End Get
            Set
                Me.repIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Phone() As String
            Get
                Return Me.phoneField
            End Get
            Set
                Me.phoneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PhoneExt() As String
            Get
                Return Me.phoneExtField
            End Get
            Set
                Me.phoneExtField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Email() As String
            Get
                Return Me.emailField
            End Get
            Set
                Me.emailField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TerritoryName() As String
            Get
                Return Me.territoryNameField
            End Get
            Set
                Me.territoryNameField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class pgmProgram
        
        Private programIdField As Decimal
        
        Private companyNameField As String
        
        Private companyCodeField As String
        
        Private productCodeField As String
        
        Private productIDField As Integer
        
        Private stateCodeField As String
        
        Private programCodeField As String
        
        Private systemCodeField As String
        
        Private nameField As String
        
        Private descriptionField As String
        
        Private displayField As Boolean
        
        '''<remarks/>
        Public Property ProgramId() As Decimal
            Get
                Return Me.programIdField
            End Get
            Set
                Me.programIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CompanyName() As String
            Get
                Return Me.companyNameField
            End Get
            Set
                Me.companyNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CompanyCode() As String
            Get
                Return Me.companyCodeField
            End Get
            Set
                Me.companyCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ProductCode() As String
            Get
                Return Me.productCodeField
            End Get
            Set
                Me.productCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ProductID() As Integer
            Get
                Return Me.productIDField
            End Get
            Set
                Me.productIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property StateCode() As String
            Get
                Return Me.stateCodeField
            End Get
            Set
                Me.stateCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ProgramCode() As String
            Get
                Return Me.programCodeField
            End Get
            Set
                Me.programCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SystemCode() As String
            Get
                Return Me.systemCodeField
            End Get
            Set
                Me.systemCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Display() As Boolean
            Get
                Return Me.displayField
            End Get
            Set
                Me.displayField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class LocationProgram
        
        Private xIDField As Integer
        
        Private programIdField As Decimal
        
        Private locationIdField As Decimal
        
        Private systemCredentialField As String
        
        Private newBusPctField As System.Nullable(Of Decimal)
        
        Private renewBusPctField As System.Nullable(Of Decimal)
        
        Private rolloverPctField As System.Nullable(Of Decimal)
        
        Private payCommissionCodeField As System.Nullable(Of Char)
        
        Private effDateField As System.Nullable(Of Date)
        
        Private expDateField As System.Nullable(Of Date)
        
        Private dateField As Date
        
        Private enteredByField As String
        
        Private appliesToCodeField As String
        
        Private pgmProgramField As pgmProgram
        
        '''<remarks/>
        Public Property xID() As Integer
            Get
                Return Me.xIDField
            End Get
            Set
                Me.xIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ProgramId() As Decimal
            Get
                Return Me.programIdField
            End Get
            Set
                Me.programIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LocationId() As Decimal
            Get
                Return Me.locationIdField
            End Get
            Set
                Me.locationIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SystemCredential() As String
            Get
                Return Me.systemCredentialField
            End Get
            Set
                Me.systemCredentialField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property NewBusPct() As System.Nullable(Of Decimal)
            Get
                Return Me.newBusPctField
            End Get
            Set
                Me.newBusPctField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property RenewBusPct() As System.Nullable(Of Decimal)
            Get
                Return Me.renewBusPctField
            End Get
            Set
                Me.renewBusPctField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property RolloverPct() As System.Nullable(Of Decimal)
            Get
                Return Me.rolloverPctField
            End Get
            Set
                Me.rolloverPctField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property PayCommissionCode() As System.Nullable(Of Char)
            Get
                Return Me.payCommissionCodeField
            End Get
            Set
                Me.payCommissionCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property EffDate() As System.Nullable(Of Date)
            Get
                Return Me.effDateField
            End Get
            Set
                Me.effDateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property ExpDate() As System.Nullable(Of Date)
            Get
                Return Me.expDateField
            End Get
            Set
                Me.expDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property [Date]() As Date
            Get
                Return Me.dateField
            End Get
            Set
                Me.dateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EnteredBy() As String
            Get
                Return Me.enteredByField
            End Get
            Set
                Me.enteredByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AppliesToCode() As String
            Get
                Return Me.appliesToCodeField
            End Get
            Set
                Me.appliesToCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property pgmProgram() As pgmProgram
            Get
                Return Me.pgmProgramField
            End Get
            Set
                Me.pgmProgramField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class IVAN
        
        Private iVANSField As String
        
        Private aMSField As String
        
        Private yAccountField As String
        
        Private isActiveField As Boolean
        
        Private userIDField As String
        
        Private dateField As Date
        
        Private enteredByField As String
        
        '''<remarks/>
        Public Property IVANS() As String
            Get
                Return Me.iVANSField
            End Get
            Set
                Me.iVANSField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AMS() As String
            Get
                Return Me.aMSField
            End Get
            Set
                Me.aMSField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property YAccount() As String
            Get
                Return Me.yAccountField
            End Get
            Set
                Me.yAccountField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property isActive() As Boolean
            Get
                Return Me.isActiveField
            End Get
            Set
                Me.isActiveField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UserID() As String
            Get
                Return Me.userIDField
            End Get
            Set
                Me.userIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property [Date]() As Date
            Get
                Return Me.dateField
            End Get
            Set
                Me.dateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EnteredBy() As String
            Get
                Return Me.enteredByField
            End Get
            Set
                Me.enteredByField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class LocationIVAN
        
        Private locationIDField As Decimal
        
        Private iVANSField As String
        
        Private dateField As Date
        
        Private enteredByField As String
        
        Private iVANField As IVAN
        
        '''<remarks/>
        Public Property LocationID() As Decimal
            Get
                Return Me.locationIDField
            End Get
            Set
                Me.locationIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IVANS() As String
            Get
                Return Me.iVANSField
            End Get
            Set
                Me.iVANSField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property [Date]() As Date
            Get
                Return Me.dateField
            End Get
            Set
                Me.dateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EnteredBy() As String
            Get
                Return Me.enteredByField
            End Get
            Set
                Me.enteredByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IVAN() As IVAN
            Get
                Return Me.iVANField
            End Get
            Set
                Me.iVANField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class Bank
        
        Private bankIdField As Decimal
        
        Private accountNameField As String
        
        Private bankNameField As String
        
        Private accountNumberField As String
        
        Private routingNumberField As String
        
        Private accountTypeCodeField As String
        
        Private isActiveField As Boolean
        
        Private bankAccountTypeField As String
        
        Private dateField As Date
        
        Private enteredByField As String
        
        '''<remarks/>
        Public Property BankId() As Decimal
            Get
                Return Me.bankIdField
            End Get
            Set
                Me.bankIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AccountName() As String
            Get
                Return Me.accountNameField
            End Get
            Set
                Me.accountNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BankName() As String
            Get
                Return Me.bankNameField
            End Get
            Set
                Me.bankNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AccountNumber() As String
            Get
                Return Me.accountNumberField
            End Get
            Set
                Me.accountNumberField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property RoutingNumber() As String
            Get
                Return Me.routingNumberField
            End Get
            Set
                Me.routingNumberField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AccountTypeCode() As String
            Get
                Return Me.accountTypeCodeField
            End Get
            Set
                Me.accountTypeCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property isActive() As Boolean
            Get
                Return Me.isActiveField
            End Get
            Set
                Me.isActiveField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BankAccountType() As String
            Get
                Return Me.bankAccountTypeField
            End Get
            Set
                Me.bankAccountTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property [Date]() As Date
            Get
                Return Me.dateField
            End Get
            Set
                Me.dateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EnteredBy() As String
            Get
                Return Me.enteredByField
            End Get
            Set
                Me.enteredByField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class LocationBank
        
        Private locationIdField As Decimal
        
        Private bankIdField As Decimal
        
        Private accountTypeCodeField As String
        
        Private dateField As Date
        
        Private enteredByField As String
        
        Private bankField As Bank
        
        '''<remarks/>
        Public Property LocationId() As Decimal
            Get
                Return Me.locationIdField
            End Get
            Set
                Me.locationIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BankId() As Decimal
            Get
                Return Me.bankIdField
            End Get
            Set
                Me.bankIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AccountTypeCode() As String
            Get
                Return Me.accountTypeCodeField
            End Get
            Set
                Me.accountTypeCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property [Date]() As Date
            Get
                Return Me.dateField
            End Get
            Set
                Me.dateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EnteredBy() As String
            Get
                Return Me.enteredByField
            End Get
            Set
                Me.enteredByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Bank() As Bank
            Get
                Return Me.bankField
            End Get
            Set
                Me.bankField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub InsertAgencyCompletedEventHandler(ByVal sender As Object, ByVal e As InsertAgencyCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertAgencyCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property oAgency() As Agency
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Agency)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub InsertLocationCompletedEventHandler(ByVal sender As Object, ByVal e As InsertLocationCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertLocationCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property oLoc() As Location
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Location)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property oAgent() As Agency
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Agency)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub InsertBankCompletedEventHandler(ByVal sender As Object, ByVal e As InsertBankCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertBankCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property oBank() As Bank
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Bank)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetActiveProgramsCompletedEventHandler(ByVal sender As Object, ByVal e As GetActiveProgramsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetActiveProgramsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Program()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Program())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub InsertProgramCompletedEventHandler(ByVal sender As Object, ByVal e As InsertProgramCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertProgramCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property oProg() As LocationProgram
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),LocationProgram)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub LoadAgencyCompletedEventHandler(ByVal sender As Object, ByVal e As LoadAgencyCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LoadAgencyCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Agency
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Agency)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub ChangePasswordCompletedEventHandler(ByVal sender As Object, ByVal e As ChangePasswordCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ChangePasswordCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub AuthenticateUserCompletedEventHandler(ByVal sender As Object, ByVal e As AuthenticateUserCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AuthenticateUserCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Location
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Location)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetLocationCompletedEventHandler(ByVal sender As Object, ByVal e As GetLocationCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetLocationCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Location
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Location)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetOptionsCompletedEventHandler(ByVal sender As Object, ByVal e As GetOptionsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetOptionsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub isInSameGroupCompletedEventHandler(ByVal sender As Object, ByVal e As isInSameGroupCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class isInSameGroupCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub IsCommissionStatementPaperlessCompletedEventHandler(ByVal sender As Object, ByVal e As IsCommissionStatementPaperlessCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class IsCommissionStatementPaperlessCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub CommissionStatementPaperlessUpdateCompletedEventHandler(ByVal sender As Object, ByVal e As CommissionStatementPaperlessUpdateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CommissionStatementPaperlessUpdateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub CommissionLoginIsAllowedCompletedEventHandler(ByVal sender As Object, ByVal e As CommissionLoginIsAllowedCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CommissionLoginIsAllowedCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub CommissionLoginCreateCompletedEventHandler(ByVal sender As Object, ByVal e As CommissionLoginCreateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CommissionLoginCreateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub CommissionLoginUpdateCompletedEventHandler(ByVal sender As Object, ByVal e As CommissionLoginUpdateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CommissionLoginUpdateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub CommissionLoginUpdateForAgentCompletedEventHandler(ByVal sender As Object, ByVal e As CommissionLoginUpdateForAgentCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CommissionLoginUpdateForAgentCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub CommissionLoginIsRegisteredCompletedEventHandler(ByVal sender As Object, ByVal e As CommissionLoginIsRegisteredCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CommissionLoginIsRegisteredCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub CommissionLoginIsRegisteredInfoValidCompletedEventHandler(ByVal sender As Object, ByVal e As CommissionLoginIsRegisteredInfoValidCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CommissionLoginIsRegisteredInfoValidCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub CommissionLoginCompletedEventHandler(ByVal sender As Object, ByVal e As CommissionLoginCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CommissionLoginCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub CommissionLoginEmailUpdateCompletedEventHandler(ByVal sender As Object, ByVal e As CommissionLoginEmailUpdateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CommissionLoginEmailUpdateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub ESignatureStatusUpdateCompletedEventHandler(ByVal sender As Object, ByVal e As ESignatureStatusUpdateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ESignatureStatusUpdateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
End Namespace
