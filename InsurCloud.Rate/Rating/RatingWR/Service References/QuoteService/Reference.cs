//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RatingWR.QuoteService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="QuoteService.IQuoteService")]
    public interface IQuoteService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuoteService/QuotePersonalAuto", ReplyAction="http://tempuri.org/IQuoteService/QuotePersonalAutoResponse")]
        CorPolicy.clsPolicyPPA QuotePersonalAuto(CorPolicy.clsPolicyPPA pol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuoteService/QuotePersonalAuto", ReplyAction="http://tempuri.org/IQuoteService/QuotePersonalAutoResponse")]
        System.Threading.Tasks.Task<CorPolicy.clsPolicyPPA> QuotePersonalAutoAsync(CorPolicy.clsPolicyPPA pol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuoteService/EnoughToRate", ReplyAction="http://tempuri.org/IQuoteService/EnoughToRateResponse")]
        CorPolicy.clsPolicyPPA EnoughToRate(CorPolicy.clsPolicyPPA pol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuoteService/EnoughToRate", ReplyAction="http://tempuri.org/IQuoteService/EnoughToRateResponse")]
        System.Threading.Tasks.Task<CorPolicy.clsPolicyPPA> EnoughToRateAsync(CorPolicy.clsPolicyPPA pol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuoteService/ValidRisk", ReplyAction="http://tempuri.org/IQuoteService/ValidRiskResponse")]
        CorPolicy.clsPolicyPPA ValidRisk(CorPolicy.clsPolicyPPA pol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuoteService/ValidRisk", ReplyAction="http://tempuri.org/IQuoteService/ValidRiskResponse")]
        System.Threading.Tasks.Task<CorPolicy.clsPolicyPPA> ValidRiskAsync(CorPolicy.clsPolicyPPA pol);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IQuoteServiceChannel : RatingWR.QuoteService.IQuoteService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class QuoteServiceClient : System.ServiceModel.ClientBase<RatingWR.QuoteService.IQuoteService>, RatingWR.QuoteService.IQuoteService {
        
        public QuoteServiceClient() {
        }
        
        public QuoteServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public QuoteServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public QuoteServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public QuoteServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public CorPolicy.clsPolicyPPA QuotePersonalAuto(CorPolicy.clsPolicyPPA pol) {
            return base.Channel.QuotePersonalAuto(pol);
        }
        
        public System.Threading.Tasks.Task<CorPolicy.clsPolicyPPA> QuotePersonalAutoAsync(CorPolicy.clsPolicyPPA pol) {
            return base.Channel.QuotePersonalAutoAsync(pol);
        }
        
        public CorPolicy.clsPolicyPPA EnoughToRate(CorPolicy.clsPolicyPPA pol) {
            return base.Channel.EnoughToRate(pol);
        }
        
        public System.Threading.Tasks.Task<CorPolicy.clsPolicyPPA> EnoughToRateAsync(CorPolicy.clsPolicyPPA pol) {
            return base.Channel.EnoughToRateAsync(pol);
        }
        
        public CorPolicy.clsPolicyPPA ValidRisk(CorPolicy.clsPolicyPPA pol) {
            return base.Channel.ValidRisk(pol);
        }
        
        public System.Threading.Tasks.Task<CorPolicy.clsPolicyPPA> ValidRiskAsync(CorPolicy.clsPolicyPPA pol) {
            return base.Channel.ValidRiskAsync(pol);
        }
    }
}
